name: CI

on:
  workflow_call:
    inputs:
      branch:
        description: "Branch to run CI"
        required: true
        type: string

jobs:
  build:
    name: SonarQube and Trivy Scanning
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      
      - name: Unit test
        run: |
          services=("Cart" "User" "Product" "front-end")
          for service in "${services[@]}"; do
            cd "E-Commerce_Web_Application/$service" || exit 1
            npm test
            cd - || exit 1
          done

      - name: SonarQube Scan
        id: sonar_scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        continue-on-error: true
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Install Trivy
        if: ${{ steps.sonar_scan.outcome == 'success' }}
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.57.0/trivy_0.57.0_Linux-64bit.tar.gz
          tar -xzf trivy_0.57.0_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/

      # Set up cache for Trivy database, include version in the cache key
      - name: Set Up Trivy Cache
        id: trivy-cache
        uses: actions/cache@v4
        with:
            path: ~/.cache/trivy/db
            key: ${{ runner.os }}-trivy-db-cache

      # Only download the Trivy offline database if cache miss
      - name: Download Trivy Offline Database
        if: steps.trivy-cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
            oras pull ghcr.io/aquasecurity/trivy-db:2
            ls -lah

      # Only extract the database if cache miss
      - name: Set Up Trivy Database in Cache
        if: steps.trivy-cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          mkdir -p ~/.cache/trivy/db
          tar -xvf db.tar.gz -C ~/.cache/trivy/db
      
      - name: Trivy scanning
        run: |
          trivy fs --severity HIGH,CRITICAL ./E-Commerce_Web_Application